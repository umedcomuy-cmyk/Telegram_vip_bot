from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import ADMIN_ID, VIP_CHANNEL_ID
from datetime import datetime, timedelta
import json
import os

ACCESS_FILE = 'access.json'

def setup_handlers(dp, bot):
    @dp.message(commands=['start'])
    async def start_handler(message: types.Message):
        first_name = message.from_user.first_name
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='üö™ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø', callback_data='request_access')],
            [InlineKeyboardButton(text='üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π (–°–ü–ë, –ÆKassa)', callback_data='pay_card')],
            [InlineKeyboardButton(text='üí∞ –û–ø–ª–∞—Ç–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π', callback_data='pay_crypto')]
        ])
        await message.answer(
            f"üè¢ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ YUKI CORPORATION ‚Äî –≤–∞—à –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç!\n\n"
            f"üëã –ü—Ä–∏–≤–µ—Ç, {first_name}!\n\n"
            f"–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –±–æ—Ç–µ YUKI CORPORATION.\n"
            f"–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤ –Ω–∞—à –∑–∞–∫—Ä—ã—Ç—ã–π VIP-–∫–∞–Ω–∞–ª, –≥–¥–µ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã, –ø—Ä–æ–≥–Ω–æ–∑—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ —Ä—ã–Ω–∫–∞–º.\n\n"
            f"üíé –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ VIP-–¥–æ—Å—Ç—É–ø (–≤—Å–µ–≥–æ –∑–∞ $20/–º–µ—Å):\n"
            f"üìä –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –ø–æ –∑–æ–ª–æ—Ç—É (XAU/USD), NASDAQ –∏ –º–∞–∂–æ—Ä–Ω—ã–º –≤–∞–ª—é—Ç–Ω—ã–º –ø–∞—Ä–∞–º\n"
            f"üì∞ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ–±–∑–æ—Ä—ã –∫–ª—é—á–µ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —Ä—ã–Ω–∫–∞\n"
            f"üìà –ü—Ä–æ–≥–Ω–æ–∑—ã –¥–≤–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –≤—Ö–æ–¥—É/–≤—ã—Ö–æ–¥—É\n"
            f"üí∞ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏\n"
            f"üìë –û—Ç—á—ë—Ç—ã –ø–æ —Å–¥–µ–ª–∫–∞–º –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤\n\n"
            f"‚ö†Ô∏è –í–∞–∂–Ω–æ: VIP-–∫–∞–Ω–∞–ª —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–º —Ä–µ–∂–∏–º–µ.\n"
            f"–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç ‚Äî –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —à—É–º–∞ –∏ –ø–µ—Ä–µ–ø–∏—Å–æ–∫.\n\n"
            f"üìå –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ VIP-–∫–∞–Ω–∞–ª—É?\n"
            f"1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É\n"
            f"2Ô∏è‚É£ –ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –≤—Ö–æ–¥–∞\n"
            f"3Ô∏è‚É£ –ù–∞—á–Ω—ë—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É",
            reply_markup=keyboard
        )

    @dp.callback_query(lambda c: c.data == 'request_access')
    async def handle_request_access(callback: types.CallbackQuery):
        user = callback.from_user
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='‚úÖ –û–¥–æ–±—Ä–∏—Ç—å', callback_data=f'approve_{user.id}')]
        ])
        await bot.send_message(
            ADMIN_ID,
            f"üì• –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Å—Ç—É–ø:\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.full_name} (@{user.username})\n"
            f"üÜî Telegram ID: {user.id}\n\n"
            f"–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ–¥–æ–±—Ä–∏—Ç—å:",
            reply_markup=keyboard
        )
        await callback.answer("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è.")

    @dp.callback_query(lambda c: c.data.startswith('approve_'))
    async def approve_user(callback: types.CallbackQuery):
        user_id = int(callback.data.split('_')[1])
        try:
            await bot.send_message(user_id, f"‚úÖ –î–æ—Å—Ç—É–ø –æ–¥–æ–±—Ä–µ–Ω! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ VIP-–∫–∞–Ω–∞–ª: https://t.me/YukiSupport_bot")
            await bot.send_message(callback.from_user.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø.")
            save_access(user_id)
        except Exception as e:
            await bot.send_message(callback.from_user.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    @dp.callback_query(lambda c: c.data == 'pay_card')
    async def pay_card(callback: types.CallbackQuery):
        await callback.message.answer(
            "üí≥ –û–ø–ª–∞—Ç–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π:\n\n"
            "1Ô∏è‚É£ –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ $20 –Ω–∞ –∫–∞—Ä—Ç—É:\n"
            "`4276 3801 2345 6789`\n\n"
            "2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ —Å—é–¥–∞üëá"
        )
        await callback.answer()

    @dp.message(lambda message: message.photo)
    async def handle_receipt(message: types.Message):
        if message.caption:
            caption = message.caption
        else:
            caption = f"üßæ –ß–µ–∫ –æ—Ç @{message.from_user.username} (ID: {message.from_user.id})"
        await bot.send_photo(chat_id=ADMIN_ID, photo=message.photo[-1].file_id, caption=caption)
        await message.reply("‚úÖ –ß–µ–∫ –ø–æ–ª—É—á–µ–Ω! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –∏ –≤—Å–∫–æ—Ä–µ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")

def save_access(user_id):
    data = {}
    if os.path.exists(ACCESS_FILE):
        with open(ACCESS_FILE, 'r') as f:
            data = json.load(f)
    data[str(user_id)] = (datetime.now() + timedelta(days=30)).strftime("%Y-%m-%d")
    with open(ACCESS_FILE, 'w') as f:
        json.dump(data, f)
